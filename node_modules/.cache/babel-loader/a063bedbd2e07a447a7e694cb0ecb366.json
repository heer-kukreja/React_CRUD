{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw Error(\"Oops... Could not fetch your data. Try Again!\");\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsLoading(false);\n        setError(null);\n      }).catch(err => {\n        setIsLoading(false);\n        setError(err.message);\n      });\n    }, 1000);\n    return () => console.log(\"clean up\");\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n\n_s(useFetch, \"oHNKtHcXBLfWEYHeRSlN5KEv5w0=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/heer/githubrepos/my-blogs/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setIsLoading","error","setError","abortCont","setTimeout","fetch","then","res","ok","Error","json","catch","err","message","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,IAElBC,UAFkB,CAEN,MAAM;AACdC,MAAAA,KAAK,CAACT,GAAD,CAAL,CACKU,IADL,CACUC,GAAG,IAAI;AACT,YAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,gBAAMC,KAAK,CAAC,+CAAD,CAAX;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OANL,EAOKJ,IAPL,CAOWT,IAAD,IAAS;AACXC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXL,EAYKS,KAZL,CAYYC,GAAD,IAAS;AACZZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACU,GAAG,CAACC,OAAL,CAAR;AACH,OAfL;AAgBH,KAnBiB,EAmBf,IAnBe,CAAlB;AAqBA,WAAO,MAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAb;AAEH,GAxBQ,EAwBN,CAACnB,GAAD,CAxBM,CAAT;AA0BA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CAhCD;;GAAMN,Q;;AAkCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const abortCont = new \n\n        setTimeout( () => {\n            fetch(url)\n                .then(res => {\n                    if(!res.ok){\n                        throw Error(\"Oops... Could not fetch your data. Try Again!\");\n                    }\n                    return res.json();\n                })\n                .then((data) =>{\n                    setData(data);\n                    setIsLoading(false);\n                    setError(null);\n                })\n                .catch((err) => {\n                    setIsLoading(false);\n                    setError(err.message);\n                })\n        }, 1000);\n\n        return () => console.log(\"clean up\");\n\n    }, [url]);\n\n    return { data, isLoading, error }\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}